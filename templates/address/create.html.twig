{% extends 'base.html.twig' %}

{% block javascripts %}
    {# MapBox #}
    <script src='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js'></script>
    <link href='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css' rel='stylesheet' />
{% endblock %}

{% block title %}Hello AddressController!{% endblock %}

{% block body %}
<div class="container text-center p-4 form-group">
    <h1>Ajouter une adresse :</h1>
    {{ form_start(addressForm) }}
    <div class="row my-4 justify-content-around">
        <div class="col-md-6">
            {{ form_label(addressForm.name, 'Nom') }}
        </div>
        <div class="col-md-6">
            {{ form_widget(addressForm.name, {'attr': {'class': 'form-control'}}) }}
            <small class="text-danger">{{ form_errors(addressForm.name) }}</small>
        </div>
    </div>
    <div class="row my-4 justify-content-around">
        <div class="col-md-6">
            {{ form_label(addressForm.city, 'Ville') }}
        </div>
        <div class="col-md-6">
            {{ form_widget(addressForm.city, {'attr': {'class': 'form-control'}}) }}
            <small class="text-danger">{{ form_errors(addressForm.city) }}</small>
        </div>
    </div>
    <div class="row my-4 justify-content-around">
        <div class="col-md-6">
            {{ form_label(addressForm.street, 'Rue') }}
        </div>
        <div class="col-md-6">
            {{ form_widget(addressForm.street, {'attr': {'class': 'form-control'}}) }}
            <small class="text-danger">{{ form_errors(addressForm.street) }}</small>
        </div>
    </div>
    <div>
        <div class="markerMap">
            <img src="{{ asset('/img/markerIcon.png') }}" alt="marker">
        </div>
        <div id="map" class="mapClass"></div>
    </div>
    <small>deplacer la map pour changer les coordonnées du lieu</small>
    <div class="row my-4 justify-content-around">
        <div class="col-md-6">
            {{ form_label(addressForm.latitude, 'Latitude') }}
        </div>
        <div class="col-md-6">
            {{ form_widget(addressForm.latitude, {'attr': {'class': 'form-control', 'readonly': 'true' }}) }}
            <small class="text-danger">{{ form_errors(addressForm.latitude) }}</small>
        </div>
    </div>
    <div class="row my-4 justify-content-around">
        <div class="col-md-6">
            {{ form_label(addressForm.longitude, 'Longitude') }}
        </div>
        <div class="col-md-6">
            {{ form_widget(addressForm.longitude, {'attr': {'class': 'form-control', 'readonly': 'true'}}) }}
            <small class="text-danger">{{ form_errors(addressForm.longitude) }}</small>
        </div>
    </div>

    <button type="submit" class="btn btn-dark">Créer</button>
    {{ form_end(addressForm) }}

    {# MAP AJAX #}
    <script>
        //Recuperer le nom de la ville pour affichage map 'id : address_city'
        let citySelect = document.getElementById("address_city");
        let streetSelect = document.getElementById("address_street");
        let latitudeInput = document.getElementById("address_latitude");
        let longitudeInput = document.getElementById("address_longitude");
        let cityNameSelected = citySelect.options[citySelect.options.selectedIndex].text
        citySelect.addEventListener("change", collectCity)
        streetSelect.addEventListener("change", collectCity)

        function collectCity(){
            cityNameSelected = citySelect.options[citySelect.options.selectedIndex].text
                + " " + streetSelect.value; //citySelect.options[citySelect.selectIndex].text;
            geocoder.query(cityNameSelected, showMap);
        }


        L.mapbox.accessToken = 'pk.eyJ1Ijoid2lsbGlhbXNjaGlsbGVyIiwiYSI6ImNrbmVvM25zbjB6enIyem83bTU4YTg0ejgifQ.xENX6fDU5_itArRo11KU1g';

        var geocoder = L.mapbox.geocoder('mapbox.places');

        var map = L.mapbox.map('map')
            .addLayer(L.mapbox.styleLayer('mapbox://styles/mapbox/streets-v11'));

        //géolocaliser avec recherche
        geocoder.query(cityNameSelected, showMap);

        function showMap(err, data) {
            // The geocoder can return an area, like a city, or a
            // point, like an address. Here we handle both cases,
            // by fitting the map bounds to an area or zooming to a point.
            if (data.lbounds) {
                map.fitBounds(data.lbounds);
            } else if (data.latlng) {
                map.setView([data.latlng[0], data.latlng[1]], 13);
            }

            let collectLatitude = data.latlng[0];
            latitudeInput.value = collectLatitude;
            let collectLongitude = data.latlng[1];
            longitudeInput.value = collectLongitude;
        }

        document.getElementById("map").addEventListener('click', loadCoordinates)

        function loadCoordinates(){
            let coordinateMap = map.getBounds();
            let centerLat = (coordinateMap._northEast.lat + coordinateMap._southWest.lat) / 2;
            let centerLng = (coordinateMap._northEast.lng + coordinateMap._southWest.lng) / 2;

            latitudeInput.value = centerLat;
            longitudeInput.value = centerLng;
        }
        {# TODO AJOUTER UN MARKER #}

    </script>
    {# MAP AJAX #}

</div>
{% endblock %}
